{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red196\green26\blue22;\red170\green13\blue145;
\red0\green0\blue0;\red92\green38\blue153;\red46\green13\blue110;\red63\green110\blue116;\red28\green0\blue207;
\red38\green71\blue75;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c66500\c5200\c56900;
\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c14900\c27800\c29400;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 #include\cf3 <iostream>\cf2 \
#include\cf3 <opencv2/core/core.hpp>\cf2 \
#include\cf3 <opencv2/highgui/highgui.hpp>\cf2 \
\cf4 using\cf5  \cf4 namespace\cf5  \cf6 cv\cf5 ;\
\cf4 using\cf5  \cf4 namespace\cf5  \cf6 std\cf5 ;\
\
\cf4 int\cf5  x, y;\
\cf4 void\cf5  scale(\cf6 Mat\cf5  &input, \cf6 Mat\cf5  &output, \cf4 double\cf5  sx, \cf4 double\cf5  sy);\
\cf4 double\cf5  sx,sy;\
\cf4 int\cf5  main(\cf4 int\cf5  argc, \cf4 char\cf5 ** argv) \{\
    \cf6 Mat\cf5  input=\cf7 imread\cf5 (\cf3 "/Users/apple/Downloads/a.png"\cf5 );\
    \cf4 if\cf5 (input.\cf7 empty\cf5 ())\
    \{\
        \cf6 cout\cf5 <<\cf3 "cannot open"\cf5 <<\cf7 endl\cf5 ;\
    \}\
    \cf4 else\cf5 \{\
        \cf6 cout\cf5 <<\cf3 "
\f1 \'ca\'e4\'c8\'eb
\f0 x
\f1 \'b7\'bd\'cf\'f2\'cb\'f5\'b7\'c5\'b1\'c8\'c0\'fd
\f0 "\cf5 <<\cf7 endl\cf5 ;\
        \cf6 cin\cf5 >>\cf8 sx\cf5 ;\
        \cf6 cout\cf5 <<\cf3 "
\f1 \'ca\'e4\'c8\'eb
\f0 y
\f1 \'b7\'bd\'cf\'f2\'cb\'f5\'b7\'c5\'b1\'c8\'c0\'fd
\f0 "\cf5 <<\cf7 endl\cf5 ;\
        \cf6 cin\cf5 >>\cf8 sy\cf5 ;\
        \cf7 namedWindow\cf5 (\cf3 "original image"\cf5 ,\cf7 WINDOW_AUTOSIZE\cf5 );\
        \cf7 imshow\cf5 (\cf3 "original image"\cf5 ,input);\
        \cf8 x\cf5 =\cf4 int\cf5 (input.\cf6 rows\cf5 *\cf8 sx\cf5 );\
        \cf8 y\cf5 =\cf4 int\cf5 (input.\cf6 cols\cf5 *\cf8 sy\cf5 );\
        \cf6 Mat\cf5  output(\cf8 x\cf5 , \cf8 y\cf5 , \cf2 CV_8UC3\cf5 , \cf6 Scalar\cf5 ::\cf7 all\cf5 (\cf9 0\cf5 ));\
        \cf10 scale\cf5 (input,output,\cf8 sx\cf5 ,\cf8 sy\cf5 );\
        \cf7 imshow\cf5 (\cf3 "
\f1 \'cb\'f5\'b7\'c5\'cd\'bc
\f0 "\cf5 ,output);\
        \cf7 waitKey\cf5 ();\
    \}\
    \cf4 return\cf5  \cf9 0\cf5 ;\
\}\
\
\cf4 void\cf5  scale(\cf6 Mat\cf5  &input, \cf6 Mat\cf5  &output, \cf4 double\cf5  sx, \cf4 double\cf5  sy) \{\
    \cf4 int\cf5  col=\cf9 0\cf5 ,row=\cf9 0\cf5 ;\
    \cf4 double\cf5  alpha=\cf9 0.0\cf5 ,beta=\cf9 0.0\cf5 ;\
    \cf4 for\cf5 (\cf4 int\cf5  i=\cf9 0\cf5 ;i<output.\cf6 rows\cf5 ;i++)\
    \{\
        \cf6 uchar\cf5 * desdata = output.\cf4 template\cf5  \cf7 ptr\cf5 <\cf6 uchar\cf5 >(i);\
        \cf4 for\cf5 (\cf4 int\cf5  j=\cf9 0\cf5 ;j<output.\cf6 cols\cf5 ;j++)\
        \{\
            row=\cf4 int\cf5 (i/sx);\
            \cf4 if\cf5 (row>=input.\cf6 rows\cf5 -\cf9 1\cf5 )\
            \{\
                row=input.\cf6 rows\cf5 -\cf9 2\cf5 ;\
            \}\
            alpha=i/sx-row;\
            \cf4 if\cf5 (alpha>=\cf9 1\cf5 )\
                alpha=\cf9 1\cf5 ;\
            \
            col=\cf4 int\cf5 (j/sy);\
            \cf4 if\cf5 (col>=input.\cf6 cols\cf5 -\cf9 1\cf5 )\
            \{\
                col=input.\cf6 cols\cf5 -\cf9 2\cf5 ;\
            \}\
            beta=j/sy-col;\
            \cf4 if\cf5 (beta>=\cf9 1\cf5 )\
                beta=\cf9 1\cf5 ;\
            \
            \cf4 for\cf5 (\cf4 int\cf5  k=\cf9 0\cf5 ;k<\cf9 3\cf5 ;k++)\
            \{\
                \cf4 double\cf5  kk = input.\cf7 at\cf5 <\cf6 Vec3b\cf5 >(row, col)[\cf7 k\cf5 ] +\
                                beta*(input.\cf7 at\cf5 <\cf6 Vec3b\cf5 >(row, col + \cf9 1\cf5 )[\cf7 k\cf5 ] - input.\cf7 at\cf5 <\cf6 Vec3b\cf5 >(row, col)[\cf7 k\cf5 ]);\
                \cf4 double\cf5  jj = input.\cf7 at\cf5 <\cf6 Vec3b\cf5 >(row + \cf9 1\cf5 , col)[\cf7 k\cf5 ] +\
                        beta*(input.\cf7 at\cf5 <\cf6 Vec3b\cf5 >(row + \cf9 1\cf5 , col + \cf9 1\cf5 )[\cf7 k\cf5 ] - input.\cf7 at\cf5 <\cf6 Vec3b\cf5 >(row + \cf9 1\cf5 , col)[\cf7 k\cf5 ]);\
            desdata[j * \cf9 3\cf5  + k] = kk + alpha*(jj - kk);\
            \}\
        \}\
    \}\
\}\
}